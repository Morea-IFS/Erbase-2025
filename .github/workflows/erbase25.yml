name: Main Worflow Pipeline
run-name: ${{ github.actor }} Worflow Code  ðŸš€
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  DeployStaging:
    name: Deploy to Development
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment:
        name: development
        url: 'http://betaerbase.morea-ifs.org'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_IP }} >> ~/.ssh/known_hosts

      - name: Deploy Application
        run: |
          ssh ${{ secrets.SSH_USER }}${{ secrets.SSH_IP }} << 'EOF'
          cd /home/admin/jiifs-intercampi-2025
          git pull origin main
          source /home/admin/jiifs-intercampi-2025/env/bin/activate
          pip install -r requirements.txt
          python3 manage.py migrate
          python3 manage.py collectstatic --noinput
          systemctl restart jiifs
          EOF

  DeployProd:
    name: Deploy to Production
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: 'http://erbase.morea-fs.org'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: group:ci

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_IP }} >> ~/.ssh/known_hosts

      - name: Deploy Application
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_IP }} << 'EOF'
          cd ${{ secrets.INSIDE_PROJECT_DIR }}
          git pull origin main
          source ${{ secrets.INSIDE_PROJECT_DIR }}${{ secrets.INSIDE_PROJECT_ENV }}
          pip install -r requirements.txt
          python manage.py migrate
          systemctl restart jiifs
          EOF
